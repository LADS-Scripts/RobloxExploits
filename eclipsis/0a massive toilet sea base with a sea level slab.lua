names = {'Wall','Platform Block','Submersible','Four-Way','Elbow','Distributor','Pipe','Cap','Fabricator','Distributor Cap','Reservoir','Spawn Point','Upgrade Station','Arc Turret','T-Junction','Shield Generator','Automechanic','Point Defense',};
	attachments = {'WallSnap2','WallSnap1','FemaleFlange','FemaleFlange3','FemaleFlange1','FemaleFlange2','FemaleFlange4',};
	local cf = function(xp, yp, zp, xr, yr, zr)
	return cfn(xp, yp, zp)*cfa(xr,yr,zr)
end
cfn, cfa = CFrame.new, CFrame.fromEulerAnglesYXZ
local tbl = {{1,cf(-0.18,-0.35000000000000003,-6.0200000000000005,-0,0,0),0,nil,nil,nil,nil},{1,cf(8,-2,0,-0,0,0),1,1,1,1,nil},{1,cf(-8,-2,0,-0,3.14,0),1,2,1,1,nil},{2,cf(-20.39,14.19,-2.75,-0,1.57,1.57),0,nil,nil,nil,nil},{3,cf(-24.64,14.1,4.46,-0,0,1.57),0,nil,nil,nil,nil},{4,cf(-0.8,-2.1,0,1.57,1.57,0),1,3,5,4,nil},{4,cf(0,-2.1,0.8,1.57,3.14,0),1,5,6,4,nil},{4,cf(0,-2.1,0.8,1.57,3.14,0),1,5,7,4,nil},{5,cf(-0.8,-1,0.58,0,0,-1.57),1,5,8,6,nil},{6,cf(-22.16,2.72,-10.78,-1.44,-0,0),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,10,8,3,7},{8,cf(0.16,-0.4,0.58,-1.57,0.26,0),1,6,8,nil,nil},{3,cf(-24.64,9.66,8.63,-0,0,1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,13,6,3,7},{3,cf(-24.64,18.72,8.89,-0,0,1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,15,6,3,6},{9,cf(-24.09,23.64,-4.88,-0,0,0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,17,nil,nil},{3,cf(-27.02,14.08,4.38,-0,0,1.57),0,nil,nil,nil,nil},{8,cf(0.16,-0.4,0.58,-1.57,0.26,0),1,6,7,nil,nil},{4,cf(-0.8,-2.1,0,1.57,1.57,0),1,3,19,4,nil},{4,cf(0,-2.1,0.8,1.57,3.14,0),1,5,21,4,nil},{8,cf(0,-0.4,0.6,-1.57,0,0),1,5,22,nil,nil},{7,cf(0,0,0,-0,0,0),2,22,7,7,7},{9,cf(-19.830000000000002,23.64,-4.9,-0,0,0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,25,nil,nil},{3,cf(-27.02,18.69,8.67,-0,0,1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,27,21,3,6},{9,cf(-15.57,23.64,-4.9,-0,0,0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,29,nil,nil},{3,cf(-27.02,9.66,8.41,-0,0,1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,31,21,3,7},{9,cf(-11.33,23.64,-4.88,-0,0,0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,33,nil,nil},{3,cf(-29.400000000000002,14.17,4.36,-0,0,1.57),0,nil,nil,nil,nil},{4,cf(-0.8,-2.1,0,1.57,1.57,0),1,3,35,4,nil},{4,cf(0,-2.1,0.8,1.57,-3.14,0),1,5,36,4,nil},{8,cf(-0.3,-0.4,0.52,-1.57,-0.52,0),1,5,37,nil,nil},{7,cf(0,0,0,-0,0,0),2,22,37,6,6},{3,cf(-29.400000000000002,9.64,8.5,-0,0,1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,40,36,3,7},{3,cf(-29.400000000000002,18.75,8.74,-0,0,1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,42,36,3,6},{9,cf(-7.1000000000000005,23.64,-4.9,0,0,-0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,44,nil,nil},{3,cf(-31.77,14.24,4.26,-0,0,1.57),0,nil,nil,nil,nil},{4,cf(-0.8,-2.1,0,1.57,1.57,0),1,3,46,4,nil},{4,cf(0,-2.1,0.8,1.57,-3.14,0),1,5,47,4,nil},{8,cf(-0,-0.4,0.6,-1.57,0,0),1,5,48,nil,nil},{8,cf(0.16,-0.4,0.58,-1.57,0.26,0),1,6,48,nil,nil},{7,cf(0,0,0,-0,0,0),2,48,37,7,7},{3,cf(-31.77,18.82,8.48,-0,0,1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,52,47,3,6},{3,cf(-31.77,9.86,8.3,-0,0,1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,54,47,3,7},{9,cf(-2.89,23.64,-4.89,0,0,-0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,56,nil,nil},{7,cf(-18.57,25.97,-13.14,0,1.57,-1.83),3,9,5,nil,nil},{7,cf(0.06,25.740000000000002,-13.07,-0,1.57,-1.83),3,58,6,nil,nil},{4,cf(0.77,-2.1,0.21,1.57,-1.83,0),1,6,59,4,nil},{11,cf(0.73,17.47,-2.5,0,-1.57,-1.57),0,nil,nil,nil,nil},{7,cf(2.15,28.55,-1.6300000000000001,-0,3.14,0),3,61,3,nil,nil},{7,cf(0,0,0,-0,0,0),2,62,60,6,6},{12,cf(-8.21,18.330000000000002,-9.450000000000001,0,-1.57,1.57),0,nil,nil,nil,nil},{10,cf(-0.52,-0.4,-0.3,-1.57,-2.09,0),1,3,64,nil,nil},{13,cf(-4.41,18.2,-10.65,0,1.57,-1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,66,60,3,7},{9,cf(5.98,23.64,-4.89,0,-0,-0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,68,nil,nil},{14,cf(12.67,29.330000000000002,-3.4,1.57,3.14,0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,70,nil,nil},{15,cf(-0,-2.1,-0.8,1.57,-0,0),1,5,60,4,nil},{7,cf(-0.3,7.54,-11.05,1.57,3.14,0),3,72,6,nil,nil},{2,cf(20.11,15.860000000000001,-2.75,0,-1.57,-1.57),0,nil,nil,nil,nil},{3,cf(24.36,16.01,4.8100000000000005,-0,-0,-1.57),0,nil,nil,nil,nil},{3,cf(24.36,11.26,8.89,-0,-0,-1.57),0,nil,nil,nil,nil},{3,cf(24.36,20.34,8.85,-0,-0,-1.57),0,nil,nil,nil,nil},{4,cf(-0.8,-2.1,0,1.57,1.57,0),1,3,75,4,nil},{4,cf(0,-2.1,0.8,1.57,3.14,0),1,5,78,4,nil},{4,cf(0,-2.1,0.8,1.57,3.14,0),1,5,79,4,nil},{5,cf(-0.8,-1,0.58,0,-0,-1.57),1,5,80,6,nil},{7,cf(0,0,0,-0,0,0),2,76,78,3,6},{7,cf(0,0,0,-0,0,0),2,78,77,7,3},{3,cf(26.740000000000002,15.950000000000001,4.44,-0,-0,-1.57),0,nil,nil,nil,nil},{4,cf(-0.8,-2.1,0,1.57,1.57,0),1,3,84,4,nil},{4,cf(0,-2.1,0.8,1.57,3.14,0),1,5,85,4,nil},{8,cf(-0.42,-0.4,0.42,-1.57,-0.79,0),1,5,86,nil,nil},{7,cf(0,0,0,-0,0,0),2,86,79,6,6},{8,cf(-0.3,-0.4,0.52,-1.57,-0.52,0),1,7,79,nil,nil},{3,cf(29.11,15.98,4.54,-0,-0,-1.57),0,nil,nil,nil,nil},{3,cf(26.740000000000002,11.08,8.8,-0,-0,-1.57),0,nil,nil,nil,nil},{3,cf(26.740000000000002,20.17,8.74,-0,-0,-1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,91,85,3,6},{7,cf(0,0,0,-0,0,0),2,92,85,3,7},{4,cf(-0.8,-2.1,0,1.57,1.57,0),1,3,90,4,nil},{4,cf(0,-2.1,0.8,1.57,-3.14,0),1,5,95,4,nil},{8,cf(0,-0.4,0.6,-1.57,0,0),1,5,96,nil,nil},{7,cf(0,0,0,-0,0,0),2,86,96,7,7},{3,cf(29.11,10.9,8.63,-0,-0,-1.57),0,nil,nil,nil,nil},{3,cf(29.11,20.17,8.72,-0,-0,-1.57),0,nil,nil,nil,nil},{7,cf(0,0,0,-0,0,0),2,99,95,3,6},{7,cf(0,0,0,-0,0,0),2,95,100,7,3},{3,cf(31.490000000000002,15.88,4.5200000000000005,-0,-0,-1.57),0,nil,nil,nil,nil},{3,cf(31.490000000000002,10.77,9.17,-0,-0,-1.57),0,nil,nil,nil,nil},{3,cf(31.490000000000002,20.150000000000002,9.51,-0,-0,-1.57),0,nil,nil,nil,nil},{4,cf(-0.8,-2.1,0,1.57,1.57,0),1,3,103,4,nil},{4,cf(0,-2.1,0.8,1.57,-3.14,0),1,5,106,4,nil},{7,cf(0,0,0,-0,0,0),2,96,107,6,6},{7,cf(0,0,0,-0,0,0),2,104,106,3,6},{7,cf(0,0,0,-0,0,0),2,105,106,3,7},{8,cf(-0.16,-0.4,0.58,-1.57,-0.26,0),1,7,107,nil,nil},{8,cf(0.3,-0.4,0.52,-1.57,0.52,0),1,5,107,nil,nil},{7,cf(18.97,25.94,-13.13,-0,-1.57,1.83),3,81,5,nil,nil},{7,cf(0,0,0,-0,0,0),2,113,72,6,5},{8,cf(-0.3,-0.4,0.52,-1.57,-0.52,0),1,7,80,nil,nil},{8,cf(0.3,-0.4,0.52,-1.57,0.52,0),1,6,80,nil,nil},{16,cf(24.21,9.81,-6.49,0,0,-1.57),0,nil,nil,nil,nil},{16,cf(24.21,5.09,-6.5,0,0,-1.57),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,118,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,117,nil,nil},{16,cf(-24.560000000000002,7.890000000000001,-6.48,-0,0,1.57),0,nil,nil,nil,nil},{16,cf(-24.560000000000002,2.92,-6.48,-0,0,1.57),0,nil,nil,nil,nil},{10,cf(-0.58,-0.4,-0.16,-1.57,-1.83,0),1,3,121,nil,nil},{10,cf(-0.58,-0.4,-0.16,-1.57,-1.83,0),1,3,122,nil,nil},{16,cf(25.04,4.3100000000000005,-10.200000000000001,-0,1.57,-1.57),0,nil,nil,nil,nil},{16,cf(24.96,9.94,-10.19,-0,1.57,-1.57),0,nil,nil,nil,nil},{10,cf(-0.58,-0.4,0.16,-1.57,-1.31,0),1,3,125,nil,nil},{10,cf(-0.58,-0.4,0.16,-1.57,-1.31,0),1,3,126,nil,nil},{16,cf(-29.72,3.0700000000000003,-9.08,-0,-1.57,1.57),0,nil,nil,nil,nil},{16,cf(-29.73,7.930000000000001,-9.08,-0,-1.57,1.57),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,130,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,129,nil,nil},{6,cf(9.74,2.74,-10.78,-0,-1.57,1.44),0,nil,nil,nil,nil},{15,cf(0,-2.1,0.8,1.57,3.14,0),1,3,133,4,nil},{7,cf(0,0,0,-0,0,0),2,134,73,5,6},{16,cf(8.14,18.48,-9.450000000000001,1.57,-3.14,0),0,nil,nil,nil,nil},{16,cf(12.77,18.490000000000002,-9.450000000000001,1.57,-3.14,0),0,nil,nil,nil,nil},{16,cf(17.3,18.51,-9.450000000000001,1.57,-3.14,0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,136,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,137,nil,nil},{10,cf(-0.6,-0.4,-0,-1.57,-1.57,0),1,3,138,nil,nil},{17,cf(17.37,9.31,-9.15,1.57,-3.14,0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,142,nil,nil},{17,cf(9.74,9.42,-9.47,-0,-1.57,1.31),0,nil,nil,nil,nil},{10,cf(-0.58,-0.4,-0.16,-1.57,-1.83,0),1,3,144,nil,nil},{17,cf(-17.23,18.14,-9.15,1.57,-3.14,0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,146,nil,nil},{18,cf(-17.7,18.07,-15.65,1.57,-3.14,0),0,nil,nil,nil,nil},{18,cf(14.620000000000001,18.28,-15.17,1.57,-3.14,0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,148,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,149,nil,nil},{14,cf(-16.45,8.93,-9.450000000000001,1.57,-3.14,0),0,nil,nil,nil,nil},{10,cf(-0.6,-0.4,0,-1.57,-1.57,0),1,3,152,nil,nil},{14,cf(17.59,2.58,-10.07,0,1.57,-1.05),0,nil,nil,nil,nil},{10,cf(-0.58,-0.4,-0.16,-1.57,-1.83,0),1,3,154,nil,nil},{14,cf(-6.17,5.14,-10.450000000000001,-0,1.57,-1.44),0,nil,nil,nil,nil},{10,cf(-0.58,-0.4,-0.16,-1.57,-1.83,0),1,3,156,nil,nil},}


--replace till this line

local remote = game:GetService("ReplicatedStorage").Shared.Remotes.PlaceStructure

local lplr = game:GetService('Players').LocalPlayer
local mouse = lplr:GetMouse()
mouse.Button1Down:Wait()
local base = mouse.Target

local placed = {}
local structures = workspace:WaitForChild('Structures')
local run = game:GetService('RunService')



local areaRadius = base.Size.Magnitude+5
for i, v in ipairs(tbl) do
	areaRadius = math.max(areaRadius, v[2].Position.Magnitude)
end

areaRadius+=5

local p = Instance.new('Part', workspace.CurrentCamera)
p.Anchored = true
p.CanCollide = false
p.Material = Enum.Material.ForceField
p.Shape = Enum.PartType.Ball
p.Size = Vector3.new(2,2,2)*areaRadius
p.Color = Color3.new(1,.2, .2)
p.CFrame = CFrame.new(base.CFrame.Position)
local ppos = base.CFrame.Position
task.delay(60*8, function()
	game.Debris:AddItem(p, 1)
end) 


local a, b = pcall(function()
	for i, v in ipairs(tbl) do
		run.RenderStepped:Wait()
		local name = names[v[1]]
		local placeMode = v[3]
		if placeMode == 0 then
			run.RenderStepped:Wait()
			remote:FireServer(
				name
				,{
					['BasePart'] = base;
					['CFrame'] = v[2]
				}
			)
		elseif placeMode == 1 then
			local needed = nil
			local s = os.clock()+2
			while needed == nil and os.clock()<s do
				for ii, vv in ipairs(placed[v[5]]:GetDescendants()) do
					if vv:IsA('BasePart') and vv.Name == attachments[ v[4] ] then
						needed = vv
						break
					end
				end
				run.RenderStepped:Wait()
			end
			remote:FireServer(
				name
				,{
					['BasePart'] = needed ;
					['CFrame'] = v[2]
				}
				,attachments[ v[6] or v[4] ]
				,needed
			)
		elseif placeMode == 2 then
			local needed1 = nil
			local s = os.clock()+2
			local cf1, cf2 = v[4], v[5]
			local attach1, attach2 = v[6], v[7]
			while needed1 == nil and os.clock()<s do
				for ii, vv in ipairs(placed[cf1]:GetDescendants()) do
					if vv:IsA('BasePart') and vv.Name == attachments[ attach1 ] then
						needed1 = vv
						break
					end
				end
				run.RenderStepped:Wait()
			end
			local needed2 = nil
			local s = os.clock()+2
			while needed2 == nil and os.clock()<s do
				for ii, vv in ipairs(placed[cf2]:GetDescendants()) do
					if vv:IsA('BasePart') and vv.Name == attachments[ attach2 ] then
						needed2 = vv
						break
					end
				end
				run.RenderStepped:Wait()
			end
			remote:FireServer(
				name
				,{
					[1]={ ['CFrame'] = needed1 };
					[2]= { ['CFrame'] = needed2 };
				}
			)
		elseif placeMode == 3 then
			local needed1 = nil
			local s = os.clock()+2
			local cf, basepart, attahment = v[2] , v[4], v[5]
			local attach1
			while needed1 == nil and os.clock()<s do
				for ii, vv in ipairs(placed[basepart]:GetDescendants()) do
					if vv:IsA('BasePart') and vv.Name == attachments[ attahment ] then
						needed1 = vv
						break
					end
				end
				run.RenderStepped:Wait()
			end
			remote:FireServer(
				name
				,{
					[1]={ ['CFrame'] = needed1 };
					[2]= { ['CFrame'] = cf, BasePart = base };
				}
			)
		end
		--if (model:GetPivot().Position-targetPos).Magnitude<= ( placeMode == 0 and 40 or 40 ) or (model:GetPivot().Position-base.Position).Magnitude <= areaRadius then
		local targetPos = (base.CFrame*v[2]).Position
		local found, s = false, os.clock()+60*5

		local con = structures.ChildAdded:Connect(function(model)
			if model.Name == name and not model:FindFirstChild('IsBlueprint') and not model:WaitForChild('IsBlueprint', .1) then
				
				local ss = os.clock()+2
				while ss>os.clock() and model.PrimaryPart == nil do run.RenderStepped:Wait() end
				if (model:GetPivot().Position-targetPos).Magnitude<= ( placeMode == 0 and 40 or 40 ) or (model:GetPivot().Position-ppos).Magnitude <= areaRadius then
					found = model
				end
			end
		end)
		repeat run.RenderStepped:Wait() until found~=false or os.clock()>s
		con:Disconnect()
		if found then
			placed[i] = found
		end
		
	end
end)

p:Destroy()

print(a, b)



