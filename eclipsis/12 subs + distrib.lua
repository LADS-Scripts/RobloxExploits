names = {'Submersible','Four-Way','Cap','Distributor','Pipe',};
attachments = {'FemaleFlange','FemaleFlange3','FemaleFlange1','FemaleFlange4','FemaleFlange2',};
local cf = function(xp, yp, zp, xr, yr, zr)
	return cfn(xp, yp, zp)*cfa(xr,yr,zr)
end
cfn, cfa = CFrame.new, CFrame.fromEulerAnglesYXZ
local tbl = {{1,cf(0.276,0.65,-2.54,-0,-3.142,0),0,nil,nil,nil,nil},{2,cf(-0.8,-2.1,0,1.571,1.571,0),1,1,1,2,nil},{2,cf(0,-2.1,0.8,1.571,3.142,0),1,3,2,2,nil},{3,cf(-0.155,-0.4,0.58,-1.571,-0.262,0),1,4,3,nil,nil},{4,cf(0.214,-0.463,18.904,-0,3.142,0),0,nil,nil,nil,nil},{5,cf(0,0,0,-0,0,0),2,5,3,1,3},{1,cf(3.709,0.65,-5.896,0,3.142,-0),0,nil,nil,nil,nil},{5,cf(0,0,0,-0,0,0),2,7,2,1,4},{1,cf(-3.136,0.65,-5.81,0,3.142,-0),0,nil,nil,nil,nil},{5,cf(0,0,0,-0,0,0),2,9,2,1,5},{1,cf(0.225,3.029,-2.573,-0,-3.142,0),0,nil,nil,nil,nil},{2,cf(-0.8,-2.1,0,1.571,1.571,0),1,1,11,2,nil},{2,cf(0,-2.1,0.8,1.571,3.142,0),1,3,12,2,nil},{3,cf(0,-0.4,0.6,-1.571,-0,0),1,3,13,nil,nil},{5,cf(0,0,0,-0,0,0),2,3,13,5,5},{1,cf(3.674,3.029,-6.27,-0,-3.142,0),0,nil,nil,nil,nil},{5,cf(0,0,0,-0,0,0),2,16,12,1,4},{1,cf(-3.21,3.029,-6.328,0,3.142,-0),0,nil,nil,nil,nil},{5,cf(0,0,0,-0,0,0),2,18,12,1,5},{1,cf(0.004,5.408,-2.58,-0,-3.142,0),0,nil,nil,nil,nil},{2,cf(-0.8,-2.1,0,1.571,1.571,0),1,1,20,2,nil},{2,cf(0,-2.1,0.8,1.571,3.142,0),1,3,21,2,nil},{3,cf(0,-0.4,0.6,-1.571,-0,0),1,3,22,nil,nil},{5,cf(0,0,0,-0,0,0),2,22,13,4,4},{1,cf(3.461,5.408,-6.138,-0,-3.142,0),0,nil,nil,nil,nil},{5,cf(0,0,0,-0,0,0),2,21,25,4,1},{1,cf(-3.461,5.408,-6.347,-0,-3.142,0),0,nil,nil,nil,nil},{5,cf(0,0,0,-0,0,0),2,21,27,5,1},{1,cf(-0.046,7.788,-2.507,-0,3.142,0),0,nil,nil,nil,nil},{2,cf(-0.8,-2.1,0,1.571,1.571,0),1,1,29,2,nil},{2,cf(0,-2.1,0.8,1.571,3.142,0),1,3,30,2,nil},{3,cf(0,-0.4,0.6,-1.571,-0,0),1,3,31,nil,nil},{5,cf(0,0,0,-0,0,0),2,22,31,5,5},{1,cf(3.384,7.788,-6.16,-0,-3.142,0),0,nil,nil,nil,nil},{5,cf(0,0,0,-0,0,0),2,34,30,1,4},{1,cf(-3.607,7.788,-6.422,-0,3.142,0),0,nil,nil,nil,nil},{5,cf(0,0,0,-0,0,0),2,36,30,1,5},{1,cf(-0.132,10.167,-2.489,-0,3.142,0),0,nil,nil,nil,nil},{1,cf(3.563,10.167,-5.954,-0,-3.142,0),0,nil,nil,nil,nil},{1,cf(-3.673,10.167,-6.646,-0,-3.142,0),0,nil,nil,nil,nil},{2,cf(-0.8,-2.1,0,1.571,1.571,0),1,1,38,2,nil},{2,cf(0,-2.1,0.8,1.571,3.142,0),1,3,41,2,nil},{3,cf(0,-0.4,0.6,-1.571,-0,0),1,3,42,nil,nil},{5,cf(0,0,0,-0,0,0),2,42,31,4,4},{5,cf(0,0,0,-0,0,0),2,41,39,4,1},{5,cf(0,0,0,-0,0,0),2,40,41,1,5},{3,cf(0.3,-0.4,0.52,-1.571,0.524,0),1,5,42,nil,nil},}







--replace till this line
local remote = game:GetService("ReplicatedStorage").Shared.Remotes.PlaceStructure

local lplr = game:GetService('Players').LocalPlayer
local mouse = lplr:GetMouse()
mouse.Button1Down:Wait()
local base = mouse.Target

local placed = {}
local structures = workspace:WaitForChild('Structures')
local run = game:GetService('RunService')



local a, b = pcall(function()
	for i, v in ipairs(tbl) do
		local name = names[v[1]]
		local placeMode = v[3]
		if placeMode == 0 then
			run.RenderStepped:Wait()
			remote:FireServer(
				name
				,{
					['BasePart'] = base;
					['CFrame'] = v[2]
				}
			)
		elseif placeMode == 1 then
			local needed = nil
			local s = os.clock()+2
			while needed == nil and os.clock()<s do
				for ii, vv in ipairs(placed[v[5]]:GetDescendants()) do
					if vv:IsA('BasePart') and vv.Name == attachments[ v[4] ] then
						needed = vv
						break
					end
				end
				run.RenderStepped:Wait()
			end
			remote:FireServer(
				name
				,{
					['BasePart'] = needed ;
					['CFrame'] = v[2]
				}
				,attachments[ v[6] or v[4] ]
				,needed
			)
		elseif placeMode == 2 then
			local needed1 = nil
			local s = os.clock()+2
			local cf1, cf2 = v[4], v[5]
			local attach1, attach2 = v[6], v[7]
			while needed1 == nil and os.clock()<s do
				for ii, vv in ipairs(placed[cf1]:GetDescendants()) do
					if vv:IsA('BasePart') and vv.Name == attachments[ attach1 ] then
						needed1 = vv
						break
					end
				end
				run.RenderStepped:Wait()
			end
			local needed2 = nil
			local s = os.clock()+2
			while needed2 == nil and os.clock()<s do
				for ii, vv in ipairs(placed[cf2]:GetDescendants()) do
					if vv:IsA('BasePart') and vv.Name == attachments[ attach2 ] then
						needed2 = vv
						break
					end
				end
				run.RenderStepped:Wait()
			end
			remote:FireServer(
				name
				,{
					[1]={ ['CFrame'] = needed1 };
					[2]= { ['CFrame'] = needed2 };
				}
			)
		elseif placeMode == 3 then
			local needed1 = nil
			local s = os.clock()+2
			local cf, basepart, attahment = v[2] , v[4], v[5]
			local attach1
			while needed1 == nil and os.clock()<s do
				for ii, vv in ipairs(placed[basepart]:GetDescendants()) do
					if vv:IsA('BasePart') and vv.Name == attachments[ attahment ] then
						needed1 = vv
						break
					end
				end
				run.RenderStepped:Wait()
			end
			remote:FireServer(
				name
				,{
					[1]={ ['CFrame'] = needed1 };
					[2]= { ['CFrame'] = cf, BasePart = base };
				}
			)
		end
		local found, s = false, os.clock()+5
		local targetPos = (base.CFrame*v[2]).Position
		local con = structures.ChildAdded:Connect(function(model)
			if model.Name == name then
				local ss = os.clock()+2
				while ss>os.clock() and model.PrimaryPart == nil do run.RenderStepped:Wait() end
				local pp = model.PrimaryPart
				if pp then
					if (pp.CFrame.Position-targetPos).Magnitude<=15 then
						found = model
					end
				end
			end
		end)
		repeat run.RenderStepped:Wait() until found~=false or os.clock()>s
		con:Disconnect()
		if found then
			local found, s = false, os.clock()+60*5
			local targetPos = (base.CFrame*v[2]).Position
			local con = structures.ChildAdded:Connect(function(model)
				if model.Name == name then
					local ss = os.clock()+2
					while ss>os.clock() and model.PrimaryPart == nil do run.RenderStepped:Wait() end
					local pp = model.PrimaryPart
					if pp then
						if (pp.CFrame.Position-targetPos).Magnitude<=15 then
							found = model
						end
					end
				end
			end)
			repeat run.RenderStepped:Wait() until found~=false or os.clock()>s
			con:Disconnect()
			if found then
				placed[i] = found
			end
			
		end

	end
end)

print(a, b)



