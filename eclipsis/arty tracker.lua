
local up = Vector3.new(0, 1, 0)

local parts = {}

for i = 1, 300 do
	local part = Instance.new('Part')
	part.Anchored = true
	part.CanCollide = false
	part.CanQuery = false
	part.CanTouch = false
	part.Color = Color3.new(0.615686, 0, 1)
	part.Material = Enum.Material.Neon
	parts[i] = part
end

local simulate = function(pos, vel, grav)
	local prevPoint = pos
	local dt = 1/25
	
	for i = 1, 300 do
		pos+=vel*dt
		vel-=Vector3.new(0, workspace.Gravity*dt*grav, 0)
		local dif = pos-prevPoint
		
		local lookVector = dif.Unit
		local rightVector= lookVector:Cross(up).Unit
		local upVec = -lookVector:Cross(rightVector)
		
		local dist = dif:Dot(lookVector)
		
		local part = parts[i]
		
		part.Size = Vector3.new(.72,.72, dist)
		part.CFrame = CFrame.fromMatrix(prevPoint+dif/2, rightVector, upVec, -lookVector)
		
		prevPoint = pos
	end
end


local plrs = game:GetService('Players')
local lplr = plrs.LocalPlayer
local uis = game:GetService('UserInputService')

local isOn = false

uis.InputBegan:Connect(function(inp)
	if inp.UserInputType ~= Enum.UserInputType.Keyboard then return end
	if inp.KeyCode ~= Enum.KeyCode.T then return end
	
	isOn = not isOn
	for i,v in next, parts do
		v.Parent = isOn and workspace.CurrentCamera or nil
	end
end)

workspace.ChildAdded:Connect(function(a)
	if a.Name ~= 'ArtilleryShell' then return end
	if a.Velocity.Magnitude<50 then return end
	
	local char = lplr.Character
	local head = char:FindFirstChild('Head')
	if not head then return end
	
	local dist = (head.Position-a.Position).Magnitude
	if dist>18 then return end
	
	_G.vel = a.Velocity.Magnitude
end)
_G.vel, _G.grav = 134, 1
while task.wait(.025) do
	if not isOn then continue end
	
	local ran = pcall(function()
		local barrel = lplr.Character.Humanoid.SeatPart.Parent.Parent.TiltAssembly.Barrel.FlareEmitterPart
		simulate(barrel.Position, barrel.CFrame.LookVector*_G.vel, _G.grav)
	end)
    for i,v in next, parts do
        v.Parent = ran and workspace.CurrentCamera or nil
    end
end


